"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapWalletConnectSignBytesError = exports.mapWalletConnectError = void 0;
const wallet_types_1 = require("@nestwallet/wallet-types");
const walletconnect_1 = require("../modules/walletconnect");
const isError_1 = require("./isError");
function mapWalletConnectError(tx, error) {
    if ((0, isError_1.isError)(error, wallet_types_1.UserDenied) ||
        (0, isError_1.isError)(error, wallet_types_1.Timeout) ||
        (0, isError_1.isError)(error, wallet_types_1.CreateTxFailed) ||
        (0, isError_1.isError)(error, wallet_types_1.TxFailed) ||
        (0, isError_1.isError)(error, wallet_types_1.TxUnspecifiedError)) {
        return error;
    }
    else if ((0, isError_1.isError)(error, walletconnect_1.WalletConnectUserDenied)) {
        return new wallet_types_1.UserDenied();
    }
    else if ((0, isError_1.isError)(error, walletconnect_1.WalletConnectTimeout)) {
        return new wallet_types_1.Timeout(error.message);
    }
    else if ((0, isError_1.isError)(error, walletconnect_1.WalletConnectCreateTxFailed)) {
        return new wallet_types_1.CreateTxFailed(tx, error.message);
    }
    else if ((0, isError_1.isError)(error, walletconnect_1.WalletConnectTxFailed)) {
        return new wallet_types_1.TxFailed(tx, error.txhash, error.message, null);
    }
    else if ((0, isError_1.isError)(error, walletconnect_1.WalletConnectTxUnspecifiedError)) {
        return new wallet_types_1.TxUnspecifiedError(tx, error.message);
    }
    return new wallet_types_1.TxUnspecifiedError(tx, error instanceof Error ? error.message : String(error));
}
exports.mapWalletConnectError = mapWalletConnectError;
function mapWalletConnectSignBytesError(bytes, error) {
    if ((0, isError_1.isError)(error, wallet_types_1.UserDenied) ||
        (0, isError_1.isError)(error, wallet_types_1.Timeout) ||
        (0, isError_1.isError)(error, wallet_types_1.SignBytesUnspecifiedError)) {
        return error;
    }
    else if ((0, isError_1.isError)(error, walletconnect_1.WalletConnectUserDenied)) {
        return new wallet_types_1.UserDenied();
    }
    else if ((0, isError_1.isError)(error, walletconnect_1.WalletConnectTimeout)) {
        return new wallet_types_1.Timeout(error.message);
    }
    else if ((0, isError_1.isError)(error, walletconnect_1.WalletConnectSignBytesUnspecifiedError)) {
        return new wallet_types_1.SignBytesUnspecifiedError(bytes, error.message);
    }
    return new wallet_types_1.SignBytesUnspecifiedError(bytes, error instanceof Error ? error.message : String(error));
}
exports.mapWalletConnectSignBytesError = mapWalletConnectSignBytesError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwV2FsbGV0Q29ubmVjdEVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL0B0ZXJyYS1tb25leS93YWxsZXQtY29udHJvbGxlci9leGNlcHRpb24vbWFwV2FsbGV0Q29ubmVjdEVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLDREQU9tQztBQUNuQyw0REFPa0M7QUFDbEMsdUNBQW9DO0FBRXBDLFNBQWdCLHFCQUFxQixDQUNuQyxFQUFtQixFQUNuQixLQUFjO0lBRWQsSUFDRSxJQUFBLGlCQUFPLEVBQUMsS0FBSyxFQUFFLHlCQUFVLENBQUM7UUFDMUIsSUFBQSxpQkFBTyxFQUFDLEtBQUssRUFBRSxzQkFBTyxDQUFDO1FBQ3ZCLElBQUEsaUJBQU8sRUFBQyxLQUFLLEVBQUUsNkJBQWMsQ0FBQztRQUM5QixJQUFBLGlCQUFPLEVBQUMsS0FBSyxFQUFFLHVCQUFRLENBQUM7UUFDeEIsSUFBQSxpQkFBTyxFQUFDLEtBQUssRUFBRSxpQ0FBa0IsQ0FBQyxFQUNsQztRQUNBLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7U0FBTSxJQUFJLElBQUEsaUJBQU8sRUFBQyxLQUFLLEVBQUUsdUNBQXVCLENBQUMsRUFBRTtRQUNsRCxPQUFPLElBQUkseUJBQVUsRUFBRSxDQUFDO0tBQ3pCO1NBQU0sSUFBSSxJQUFBLGlCQUFPLEVBQUMsS0FBSyxFQUFFLG9DQUFvQixDQUFDLEVBQUU7UUFDL0MsT0FBTyxJQUFJLHNCQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ25DO1NBQU0sSUFBSSxJQUFBLGlCQUFPLEVBQUMsS0FBSyxFQUFFLDJDQUEyQixDQUFDLEVBQUU7UUFDdEQsT0FBTyxJQUFJLDZCQUFjLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUM5QztTQUFNLElBQUksSUFBQSxpQkFBTyxFQUFDLEtBQUssRUFBRSxxQ0FBcUIsQ0FBQyxFQUFFO1FBQ2hELE9BQU8sSUFBSSx1QkFBUSxDQUFDLEVBQUUsRUFBRSxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDNUQ7U0FBTSxJQUFJLElBQUEsaUJBQU8sRUFBQyxLQUFLLEVBQUUsK0NBQStCLENBQUMsRUFBRTtRQUMxRCxPQUFPLElBQUksaUNBQWtCLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUNsRDtJQUNELE9BQU8sSUFBSSxpQ0FBa0IsQ0FDM0IsRUFBRSxFQUNGLEtBQUssWUFBWSxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FDdkQsQ0FBQztBQUNKLENBQUM7QUEzQkQsc0RBMkJDO0FBRUQsU0FBZ0IsOEJBQThCLENBQzVDLEtBQWEsRUFDYixLQUFjO0lBRWQsSUFDRSxJQUFBLGlCQUFPLEVBQUMsS0FBSyxFQUFFLHlCQUFVLENBQUM7UUFDMUIsSUFBQSxpQkFBTyxFQUFDLEtBQUssRUFBRSxzQkFBTyxDQUFDO1FBQ3ZCLElBQUEsaUJBQU8sRUFBQyxLQUFLLEVBQUUsd0NBQXlCLENBQUMsRUFDekM7UUFDQSxPQUFPLEtBQUssQ0FBQztLQUNkO1NBQU0sSUFBSSxJQUFBLGlCQUFPLEVBQUMsS0FBSyxFQUFFLHVDQUF1QixDQUFDLEVBQUU7UUFDbEQsT0FBTyxJQUFJLHlCQUFVLEVBQUUsQ0FBQztLQUN6QjtTQUFNLElBQUksSUFBQSxpQkFBTyxFQUFDLEtBQUssRUFBRSxvQ0FBb0IsQ0FBQyxFQUFFO1FBQy9DLE9BQU8sSUFBSSxzQkFBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUNuQztTQUFNLElBQUksSUFBQSxpQkFBTyxFQUFDLEtBQUssRUFBRSxzREFBc0MsQ0FBQyxFQUFFO1FBQ2pFLE9BQU8sSUFBSSx3Q0FBeUIsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQzVEO0lBQ0QsT0FBTyxJQUFJLHdDQUF5QixDQUNsQyxLQUFLLEVBQ0wsS0FBSyxZQUFZLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUN2RCxDQUFDO0FBQ0osQ0FBQztBQXJCRCx3RUFxQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVhdGVUeE9wdGlvbnMgfSBmcm9tICdAdGVycmEtbW9uZXkvZmVhdGhlci5qcyc7XG5pbXBvcnQge1xuICBDcmVhdGVUeEZhaWxlZCxcbiAgVGltZW91dCxcbiAgVHhGYWlsZWQsXG4gIFR4VW5zcGVjaWZpZWRFcnJvcixcbiAgVXNlckRlbmllZCxcbiAgU2lnbkJ5dGVzVW5zcGVjaWZpZWRFcnJvclxufSBmcm9tICdAdGVycmEtbW9uZXkvd2FsbGV0LXR5cGVzJztcbmltcG9ydCB7XG4gIFdhbGxldENvbm5lY3RDcmVhdGVUeEZhaWxlZCxcbiAgV2FsbGV0Q29ubmVjdFRpbWVvdXQsXG4gIFdhbGxldENvbm5lY3RUeEZhaWxlZCxcbiAgV2FsbGV0Q29ubmVjdFR4VW5zcGVjaWZpZWRFcnJvcixcbiAgV2FsbGV0Q29ubmVjdFVzZXJEZW5pZWQsXG4gIFdhbGxldENvbm5lY3RTaWduQnl0ZXNVbnNwZWNpZmllZEVycm9yLFxufSBmcm9tICcuLi9tb2R1bGVzL3dhbGxldGNvbm5lY3QnO1xuaW1wb3J0IHsgaXNFcnJvciB9IGZyb20gJy4vaXNFcnJvcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBtYXBXYWxsZXRDb25uZWN0RXJyb3IoXG4gIHR4OiBDcmVhdGVUeE9wdGlvbnMsXG4gIGVycm9yOiB1bmtub3duLFxuKTogRXJyb3Ige1xuICBpZiAoXG4gICAgaXNFcnJvcihlcnJvciwgVXNlckRlbmllZCkgfHxcbiAgICBpc0Vycm9yKGVycm9yLCBUaW1lb3V0KSB8fFxuICAgIGlzRXJyb3IoZXJyb3IsIENyZWF0ZVR4RmFpbGVkKSB8fFxuICAgIGlzRXJyb3IoZXJyb3IsIFR4RmFpbGVkKSB8fFxuICAgIGlzRXJyb3IoZXJyb3IsIFR4VW5zcGVjaWZpZWRFcnJvcilcbiAgKSB7XG4gICAgcmV0dXJuIGVycm9yO1xuICB9IGVsc2UgaWYgKGlzRXJyb3IoZXJyb3IsIFdhbGxldENvbm5lY3RVc2VyRGVuaWVkKSkge1xuICAgIHJldHVybiBuZXcgVXNlckRlbmllZCgpO1xuICB9IGVsc2UgaWYgKGlzRXJyb3IoZXJyb3IsIFdhbGxldENvbm5lY3RUaW1lb3V0KSkge1xuICAgIHJldHVybiBuZXcgVGltZW91dChlcnJvci5tZXNzYWdlKTtcbiAgfSBlbHNlIGlmIChpc0Vycm9yKGVycm9yLCBXYWxsZXRDb25uZWN0Q3JlYXRlVHhGYWlsZWQpKSB7XG4gICAgcmV0dXJuIG5ldyBDcmVhdGVUeEZhaWxlZCh0eCwgZXJyb3IubWVzc2FnZSk7XG4gIH0gZWxzZSBpZiAoaXNFcnJvcihlcnJvciwgV2FsbGV0Q29ubmVjdFR4RmFpbGVkKSkge1xuICAgIHJldHVybiBuZXcgVHhGYWlsZWQodHgsIGVycm9yLnR4aGFzaCwgZXJyb3IubWVzc2FnZSwgbnVsbCk7XG4gIH0gZWxzZSBpZiAoaXNFcnJvcihlcnJvciwgV2FsbGV0Q29ubmVjdFR4VW5zcGVjaWZpZWRFcnJvcikpIHtcbiAgICByZXR1cm4gbmV3IFR4VW5zcGVjaWZpZWRFcnJvcih0eCwgZXJyb3IubWVzc2FnZSk7XG4gIH1cbiAgcmV0dXJuIG5ldyBUeFVuc3BlY2lmaWVkRXJyb3IoXG4gICAgdHgsXG4gICAgZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBTdHJpbmcoZXJyb3IpLFxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFwV2FsbGV0Q29ubmVjdFNpZ25CeXRlc0Vycm9yKFxuICBieXRlczogQnVmZmVyLFxuICBlcnJvcjogdW5rbm93bixcbik6IEVycm9yIHtcbiAgaWYgKFxuICAgIGlzRXJyb3IoZXJyb3IsIFVzZXJEZW5pZWQpIHx8XG4gICAgaXNFcnJvcihlcnJvciwgVGltZW91dCkgfHxcbiAgICBpc0Vycm9yKGVycm9yLCBTaWduQnl0ZXNVbnNwZWNpZmllZEVycm9yKVxuICApIHtcbiAgICByZXR1cm4gZXJyb3I7XG4gIH0gZWxzZSBpZiAoaXNFcnJvcihlcnJvciwgV2FsbGV0Q29ubmVjdFVzZXJEZW5pZWQpKSB7XG4gICAgcmV0dXJuIG5ldyBVc2VyRGVuaWVkKCk7XG4gIH0gZWxzZSBpZiAoaXNFcnJvcihlcnJvciwgV2FsbGV0Q29ubmVjdFRpbWVvdXQpKSB7XG4gICAgcmV0dXJuIG5ldyBUaW1lb3V0KGVycm9yLm1lc3NhZ2UpO1xuICB9IGVsc2UgaWYgKGlzRXJyb3IoZXJyb3IsIFdhbGxldENvbm5lY3RTaWduQnl0ZXNVbnNwZWNpZmllZEVycm9yKSkge1xuICAgIHJldHVybiBuZXcgU2lnbkJ5dGVzVW5zcGVjaWZpZWRFcnJvcihieXRlcywgZXJyb3IubWVzc2FnZSk7XG4gIH1cbiAgcmV0dXJuIG5ldyBTaWduQnl0ZXNVbnNwZWNpZmllZEVycm9yKFxuICAgIGJ5dGVzLFxuICAgIGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogU3RyaW5nKGVycm9yKSxcbiAgKTtcbn1cbiJdfQ==